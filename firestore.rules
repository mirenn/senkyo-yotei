rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Elections - readable by all, writable by authenticated users
    match /elections/{electionId} {
      allow read: if true;
      allow create: if request.auth != null && 
        request.auth.uid != null &&
        resource == null;
      // For update/delete, check if the user is the creator using the raw UID
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      
      // Candidates subcollection
      match /candidates/{candidateId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && 
          request.auth.uid == get(/databases/$(database)/documents/elections/$(electionId)).data.createdBy;
      }
    }
    
    // Users - readable/writable by the user themselves (using raw UID)
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Votes - readable/writable by the user themselves (using raw UID)
    match /votes/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Election results - readable by all, writable by authenticated users (for development)
    match /electionResults/{electionId} {
      allow read: if true;
      allow write: if request.auth != null; // Allow authenticated users to update results for development
    }
  }
}
